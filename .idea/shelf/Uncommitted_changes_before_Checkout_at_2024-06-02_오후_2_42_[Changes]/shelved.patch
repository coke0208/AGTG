Index: app/src/main/java/com/example/test/ProductActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.test\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.Button\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.test.databinding.ActivityProductBinding\r\nimport com.example.test.productinfo.ProductDB\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.zxing.integration.android.IntentIntegrator\r\nimport com.google.zxing.integration.android.IntentResult\r\nimport org.json.JSONException\r\nimport org.json.JSONObject\r\n\r\nclass ProductActivity : AppCompatActivity() {\r\n    private lateinit var binding: ActivityProductBinding\r\n    private var qrScan: IntentIntegrator? = null\r\n    private var textViewName: TextView? = null\r\n    private var textViewAddress: TextView? = null\r\n    private var textViewedate: TextView? = null\r\n    private var textViewcdate: TextView? = null\r\n    private var info: TextView? = null\r\n\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityProductBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        textViewName = findViewById<View>(R.id.textViewName) as TextView\r\n        textViewAddress = findViewById<View>(R.id.textViewaddres) as TextView\r\n        textViewedate = findViewById<View>(R.id.textViewedate) as TextView\r\n        textViewcdate = findViewById<View>(R.id.textViewcdate)as TextView\r\n        info=findViewById<View>(R.id.textViewinfo)as TextView\r\n\r\n        binding.btnSave.setOnClickListener {\r\n            saveProductData(\"ColdStorage\")\r\n            //startFragmentActivity(\"ColdStorage\")\r\n        }\r\n\r\n        binding.btnFrozenSave.setOnClickListener {\r\n            saveProductData(\"FrozenStorage\")\r\n            //startFragmentActivity(\"FrozenStorage\")\r\n        }\r\n\r\n        binding.btnRoomSave.setOnClickListener {\r\n            saveProductData(\"RoomStorage\")\r\n            //startFragmentActivity(\"RoomStorage\")\r\n        }\r\n\r\n        val name=intent.getStringExtra(\"name\")\r\n        val address=intent.getStringExtra(\"addres\")\r\n        val edate=intent.getStringExtra(\"edate\")\r\n        val cdate=intent.getStringExtra(\"cdate\")\r\n        val pinfo=intent.getStringExtra(\"info\")\r\n\r\n        textViewName!!.text=name\r\n        textViewAddress!!.text=address\r\n        textViewedate!!.text=edate\r\n        textViewcdate!!.text=cdate\r\n        info!!.text=pinfo\r\n\r\n\r\n        // QR Code Scanner\r\n        qrScan = IntentIntegrator(this)\r\n        binding.add.setOnClickListener {\r\n            qrScan!!.setPrompt(\"Scanning...\")\r\n            qrScan!!.initiateScan()\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        val result: IntentResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, data)\r\n        if (result != null) {\r\n            if (result.contents == null) {\r\n                Toast.makeText(this@ProductActivity, \"취소!\", Toast.LENGTH_SHORT).show()\r\n            } else {\r\n                Toast.makeText(this@ProductActivity, \"스캔완료!\", Toast.LENGTH_SHORT).show()\r\n                try {\r\n                    val obj = JSONObject(result.contents)\r\n                    textViewName!!.text = obj.getString(\"name\")\r\n                    textViewAddress!!.text = obj.getString(\"addres\")\r\n                    textViewedate!!.text = obj.getString(\"edate\")\r\n                    textViewcdate!!.text = obj.getString(\"cdate\")\r\n                    info!!.text = obj.getString(\"info\")\r\n                } catch (e: JSONException) {\r\n                    e.printStackTrace()\r\n                }\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data)\r\n        }\r\n    }\r\n\r\n    private fun saveProductData(storageType: String) {\r\n        val name = binding.textViewName.text.toString()\r\n        val address = binding.textViewaddres.text.toString()\r\n        val cdate = binding.textViewcdate.text.toString()\r\n        val edate = binding.textViewedate.text.toString()\r\n        val info = binding.textViewinfo.text.toString()\r\n\r\n        val product = ProductDB(name, address, edate, cdate, info)\r\n\r\n        val databaseReference = FirebaseDatabase.getInstance(\"https://sukbinggotest-default-rtdb.firebaseio.com/\")\r\n            .getReference(storageType)\r\n\r\n        databaseReference.push().setValue(product).addOnCompleteListener {\r\n            if (it.isSuccessful) {\r\n                Toast.makeText(this, \"저장성공\", Toast.LENGTH_LONG).show()\r\n                clearInputFields()\r\n            } else {\r\n                Toast.makeText(this, \"저장실패\", Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun clearInputFields() {\r\n        binding.textViewName.text.clear()\r\n        binding.textViewaddres.text.clear()\r\n        binding.textViewcdate.text.clear()\r\n        binding.textViewedate.text.clear()\r\n        binding.textViewinfo.text.clear()\r\n    }\r\n\r\n    /*private fun startFragmentActivity(storageType: String) {\r\n        val intent = Intent(this, HomeFragment::class.java)\r\n        intent.putExtra(\"storageType\", storageType)\r\n        startActivity(intent)\r\n    }*/\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/test/ProductActivity.kt b/app/src/main/java/com/example/test/ProductActivity.kt
--- a/app/src/main/java/com/example/test/ProductActivity.kt	(revision 94628939860a950e2cdd90dc2e9eb757f5182819)
+++ b/app/src/main/java/com/example/test/ProductActivity.kt	(date 1717306875528)
@@ -31,7 +31,7 @@
         setContentView(binding.root)
 
         textViewName = findViewById<View>(R.id.textViewName) as TextView
-        textViewAddress = findViewById<View>(R.id.textViewaddres) as TextView
+        textViewAddress = findViewById<View>(R.id.textViewaddress) as TextView
         textViewedate = findViewById<View>(R.id.textViewedate) as TextView
         textViewcdate = findViewById<View>(R.id.textViewcdate)as TextView
         info=findViewById<View>(R.id.textViewinfo)as TextView
@@ -50,17 +50,17 @@
             saveProductData("RoomStorage")
             //startFragmentActivity("RoomStorage")
         }
-
+        //제품 정보를 string으로 가져옴
         val name=intent.getStringExtra("name")
-        val address=intent.getStringExtra("addres")
-        val edate=intent.getStringExtra("edate")
-        val cdate=intent.getStringExtra("cdate")
+        val address=intent.getStringExtra("address")
+        val exdate=intent.getStringExtra("edate")
+        val Usebydate=intent.getStringExtra("cdate")
         val pinfo=intent.getStringExtra("info")
 
         textViewName!!.text=name
         textViewAddress!!.text=address
-        textViewedate!!.text=edate
-        textViewcdate!!.text=cdate
+        textViewedate!!.text=exdate
+        textViewcdate!!.text=Usebydate
         info!!.text=pinfo
 
 
@@ -87,7 +87,7 @@
                 try {
                     val obj = JSONObject(result.contents)
                     textViewName!!.text = obj.getString("name")
-                    textViewAddress!!.text = obj.getString("addres")
+                    textViewAddress!!.text = obj.getString("address")
                     textViewedate!!.text = obj.getString("edate")
                     textViewcdate!!.text = obj.getString("cdate")
                     info!!.text = obj.getString("info")
@@ -102,7 +102,7 @@
 
     private fun saveProductData(storageType: String) {
         val name = binding.textViewName.text.toString()
-        val address = binding.textViewaddres.text.toString()
+        val address = binding.textViewaddress.text.toString()
         val cdate = binding.textViewcdate.text.toString()
         val edate = binding.textViewedate.text.toString()
         val info = binding.textViewinfo.text.toString()
@@ -124,7 +124,7 @@
 
     private fun clearInputFields() {
         binding.textViewName.text.clear()
-        binding.textViewaddres.text.clear()
+        binding.textViewaddress.text.clear()
         binding.textViewcdate.text.clear()
         binding.textViewedate.text.clear()
         binding.textViewinfo.text.clear()
Index: app/src/main/java/com/example/test/productinfo/ProductDB.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.test.productinfo\r\n\r\ndata class ProductDB(\r\n    var id: String=\"\",\r\n    var name:String?=null,\r\n    var addres:String?=null,\r\n    var edate:String?=null,\r\n    var cdate:String?=null,\r\n    var info:String?=null\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/test/productinfo/ProductDB.kt b/app/src/main/java/com/example/test/productinfo/ProductDB.kt
--- a/app/src/main/java/com/example/test/productinfo/ProductDB.kt	(revision 94628939860a950e2cdd90dc2e9eb757f5182819)
+++ b/app/src/main/java/com/example/test/productinfo/ProductDB.kt	(date 1717306875529)
@@ -3,7 +3,7 @@
 data class ProductDB(
     var id: String="",
     var name:String?=null,
-    var addres:String?=null,
+    var address:String?=null,
     var edate:String?=null,
     var cdate:String?=null,
     var info:String?=null
Index: app/src/main/java/com/example/test/productutils/ProductAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.test.productutils\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.ProgressBar\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.test.ProductActivity\r\nimport com.example.test.R\r\nimport com.example.test.productinfo.ProductDB\r\nimport com.google.firebase.database.FirebaseDatabase\r\nimport com.google.firebase.database.DatabaseReference\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.launch\r\nimport kotlinx.coroutines.tasks.await\r\nimport kotlinx.coroutines.withContext\r\n\r\nclass ProductAdapter(private val context: Context, private val productList: ArrayList<ProductDB>, private val storageType: String) :\r\n    RecyclerView.Adapter<ProductAdapter.ProductViewHolder>() {\r\n\r\n    // RecyclerView 내 각 항목에 대한 뷰 홀더\r\n        class ProductViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n        val productName: TextView = view.findViewById(R.id.tvTitle)\r\n        val productEdate: TextView = view.findViewById(R.id.ex_date)\r\n        val productImage: ImageView = view.findViewById(R.id.tvImage)\r\n        val progressBar: ProgressBar = view.findViewById(R.id.progress)\r\n        val deleteButton: Button = view.findViewById(R.id.btnDelete)\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ProductViewHolder {\r\n        val view = LayoutInflater.from(context).inflate(R.layout.item_view, parent, false)\r\n        return ProductViewHolder(view)\r\n    }\r\n    // RecyclerView의 각 항목에 데이터를 바인딩\r\n    override fun onBindViewHolder(holder: ProductViewHolder, position: Int) {\r\n        val product = productList[position]// 해당 위치의 제품 가져오기\r\n        holder.productName.text = product.name\r\n        holder.productEdate.text = product.edate\r\n\r\n// 아이템을 클릭하면 제품 상세 정보를 표시하는 ProductActivity로 이동\r\n        holder.itemView.setOnClickListener {\r\n            val intent = Intent(context, ProductActivity::class.java).apply {\r\n                putExtra(\"name\", product.name)\r\n                putExtra(\"address\", product.addres)\r\n                putExtra(\"edate\", product.edate)\r\n                putExtra(\"cdate\", product.cdate)\r\n                putExtra(\"info\", product.info)\r\n            }\r\n            context.startActivity(intent)\r\n        }\r\n\r\n        holder.deleteButton.setOnClickListener {\r\n            // Handle delete button click\r\n            deleteProduct(product.id, position)\r\n        }\r\n    }\r\n    // RecyclerView에 표시되는 아이템의 수 반환\r\n    override fun getItemCount(): Int {\r\n        return productList.size\r\n    }\r\n    // Firebase에서 제품을 삭제하고 UI 업데이트\r\n    private fun deleteProduct(productId: String, position: Int) {\r\n        val databaseReference: DatabaseReference = FirebaseDatabase.getInstance(\"https://sukbinggotest-default-rtdb.firebaseio.com/\")\r\n            .getReference(storageType).child(productId)\r\n// 위치가 유효한지 확인\r\n        if (position >= productList.size) {\r\n            Toast.makeText(context, \"삭제 실패: Index out of bounds\", Toast.LENGTH_SHORT).show()\r\n            return\r\n        }\r\n// 비동기 작업(특정 코드를 수행하는 도중에도 아래로 계속 내려가며 수행함. 순서대로 진행하는 것이 아니라 한번에 여러개가 진행)을 위해 코루틴 사용\r\n        CoroutineScope(Dispatchers.IO).launch {\r\n            try {\r\n                databaseReference.removeValue().await()\r\n                withContext(Dispatchers.Main) {// 메인 스레드에서 UI 업데이트\r\n                    synchronized(productList) {\r\n                        if (position < productList.size) {// 위치가 여전히 유효한지 확인\r\n                            productList.removeAt(position)\r\n                            notifyItemRemoved(position)// 어댑터에 항목 제거 알림\r\n                            notifyItemRangeChanged(position, productList.size) // 데이터 세트가 변경되었음을 어댑터에 알림\r\n                            Toast.makeText(context, \"삭제 성공\", Toast.LENGTH_SHORT).show()\r\n                        } else {\r\n                            Toast.makeText(context, \"삭제 성공\", Toast.LENGTH_SHORT).show()\r\n                            //삭제 되는데 왜 실패라 뜨는지 모르겠음/삭제 성공에 대한 토스트 메시지 표시 (인덱스가 범위를 벗어날 경우)\r\n                            //Toast.makeText(context, \"삭제 실패: Index out of bounds\", Toast.LENGTH_SHORT).show()\r\n                        }\r\n                    }\r\n                }\r\n            } catch (e: Exception) {  // 예외 처리 및 삭제 실패에 대한 토스트 메시지 표시\r\n                withContext(Dispatchers.Main) {\r\n                    Toast.makeText(context, \"삭제 실패: ${e.message}\", Toast.LENGTH_LONG).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/test/productutils/ProductAdapter.kt b/app/src/main/java/com/example/test/productutils/ProductAdapter.kt
--- a/app/src/main/java/com/example/test/productutils/ProductAdapter.kt	(revision 94628939860a950e2cdd90dc2e9eb757f5182819)
+++ b/app/src/main/java/com/example/test/productutils/ProductAdapter.kt	(date 1717306875530)
@@ -34,6 +34,7 @@
         val deleteButton: Button = view.findViewById(R.id.btnDelete)
     }
 
+    // RecyclerView에 표시될 각 아이템의 뷰 홀더 생성
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ProductViewHolder {
         val view = LayoutInflater.from(context).inflate(R.layout.item_view, parent, false)
         return ProductViewHolder(view)
@@ -48,7 +49,7 @@
         holder.itemView.setOnClickListener {
             val intent = Intent(context, ProductActivity::class.java).apply {
                 putExtra("name", product.name)
-                putExtra("address", product.addres)
+                putExtra("address", product.address)
                 putExtra("edate", product.edate)
                 putExtra("cdate", product.cdate)
                 putExtra("info", product.info)
@@ -57,24 +58,25 @@
         }
 
         holder.deleteButton.setOnClickListener {
-            // Handle delete button click
             deleteProduct(product.id, position)
         }
     }
+
     // RecyclerView에 표시되는 아이템의 수 반환
     override fun getItemCount(): Int {
         return productList.size
     }
+
     // Firebase에서 제품을 삭제하고 UI 업데이트
     private fun deleteProduct(productId: String, position: Int) {
         val databaseReference: DatabaseReference = FirebaseDatabase.getInstance("https://sukbinggotest-default-rtdb.firebaseio.com/")
             .getReference(storageType).child(productId)
-// 위치가 유효한지 확인
+        // 위치가 유효한지 확인
         if (position >= productList.size) {
             Toast.makeText(context, "삭제 실패: Index out of bounds", Toast.LENGTH_SHORT).show()
             return
         }
-// 비동기 작업(특정 코드를 수행하는 도중에도 아래로 계속 내려가며 수행함. 순서대로 진행하는 것이 아니라 한번에 여러개가 진행)을 위해 코루틴 사용
+        // 비동기 작업(특정 코드를 수행하는 도중에도 아래로 계속 내려가며 수행함. 순서대로 진행하는 것이 아니라 한번에 여러개가 진행)을 위해 코루틴 사용
         CoroutineScope(Dispatchers.IO).launch {
             try {
                 databaseReference.removeValue().await()
Index: app/src/main/res/layout/activity_product.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ProductActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_weight=\"0\"\r\n        android:orientation=\"vertical\"\r\n        android:background=\"@color/submain\"\r\n        tools:layout_editor_absoluteX=\"60dp\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@color/main\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <ImageButton\r\n                android:id=\"@+id/back\"\r\n                android:layout_width=\"?attr/actionBarSize\"\r\n                android:layout_height=\"?attr/actionBarSize\"\r\n                android:background=\"@color/main\"\r\n                android:src=\"@drawable/ic_action_arrow_back\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/textView2\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"상품정보\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"20dp\" />\r\n\r\n        </LinearLayout>\r\n\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:id=\"@+id/textViewName\"\r\n            android:hint=\"이름\" />\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"address\"\r\n            android:id=\"@+id/textViewaddres\"\r\n            android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:id=\"@+id/textViewcdate\"\r\n            android:hint=\"유통기한\" />\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"소비기한\"\r\n            android:id=\"@+id/textViewedate\"\r\n            android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\r\n\r\n        <EditText\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:id=\"@+id/textViewinfo\"\r\n            android:text=\"코드정보\" />\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnSave\"\r\n            android:text=\"냉장\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnFrozenSave\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"냉동\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/btnRoomSave\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"실온\" />\r\n\r\n\r\n        </LinearLayout>\r\n\r\n    </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/add\"\r\n        android:onClick=\"start\"\r\n        android:layout_width=\"?attr/actionBarSize\"\r\n        android:layout_height=\"?attr/actionBarSize\"\r\n        android:layout_marginEnd=\"?attr/actionBarSize\"\r\n        android:layout_marginBottom=\"?attr/actionBarSize\"\r\n        android:padding=\"10dp\"\r\n        android:scaleType=\"fitXY\"\r\n        android:background=\"@drawable/circle\"\r\n        android:src=\"@drawable/ic_action_filter_center_focus\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_product.xml b/app/src/main/res/layout/activity_product.xml
--- a/app/src/main/res/layout/activity_product.xml	(revision 94628939860a950e2cdd90dc2e9eb757f5182819)
+++ b/app/src/main/res/layout/activity_product.xml	(date 1717306875531)
@@ -51,7 +51,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:hint="address"
-            android:id="@+id/textViewaddres"
+            android:id="@+id/textViewaddress"
             android:textAppearance="@style/Base.TextAppearance.AppCompat.Large" />
 
         <EditText
